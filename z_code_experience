------边看、边调、边学（三者要结合进行，不要互相等待）-------
------模块之间不要互相等待，可同步进行，只要最后能看完、能理解完就行------
------以问题点入口，平时出现的问题，要收集起来，并且通过 源码+数据+文档形式解决----
------从现在开始，不断的解决问题，不断地去把学习的知识应用起来，只要能解决问题了，自然就有兴趣了，自然就肯学习了---
------按流程，一个小流程一个小流程来看，以流程为主、模块为辅------------
------看类：要看类的继承关系、实现关系、派生关系；看类包含的数据结构；看构造方法以及初始化方法-----
------多动手画画类图、流程图、数据结构等，加深理解-------
------(*** 出现的问题、以及涉及到的知识点，要及时的解决、及时的理解掌握，不要互相等待 ***)--------
------（*** 精通一样事情，必须要投入大量的时间去研究实践，长期泡在那个环境中。所以要争分多秒、挤出更多的时间研究实践dubbo源码 ***）----------
-------看流程中代码时，接着上次看完的地方看，前面看过的部分回顾一下就行，不需要又花费很多时间重新去看---------------
-------java 的一些高级特性（平时不一定用到、并且有一定难度的）、用法要会，Netty的基本用法要会---------

2018/10/27（能够学到知识、解决问题、自然会感兴趣了）
1.不能在没理解代码的时候、没看相关知识的，盲目的调试。因为并不知道为什么会这么调用，会什么要用这个技术
17/9 - 17/10 尝试一个月，调试dubbo-remoting，并没有效果

2.不能在没有调试、没有看相关知识情况下，盲目看代码，只是应付的读代码，根本看不懂，不知道有何用途，理出来的知识点和问题，很难解决
18/9 - 18/10 尝试一个月，虽然看完了dubbo-rpc-api，dubbo-rpc-default两个模块代码，也整理出知识点、问题点，但是只是看代码
能力没有本质提高

3.在有看代码、有调试、有学些相关知识的情况下，看了dubbo-romoting-api中的一个buffer块，虽然比较缓慢，但已经看到了效果了，也提高
了个人学习兴趣，提高了学习积极性。
18/10 - 18/11 尝试一个月，看完了，并调试部分buffer包下的类，并且学习了java NIO、Netty中的buffer、channel
