（相关的知识点：只是为了辅助源码学习的，所以只要针对性学习，并且整体理解、熟悉就好，没必要非要把每个知识点了解）
（知识点：是要有针对性的，范围要尽量缩小，按点来学习）
2018-11-17
1.枚举类、注解
2.对象的创建、构造函数、继承、super、this的使用
3.对象、接口、抽象类、成员变量、final
4.Netty ExecutorService、NioServerSocketChannelFactory、Executor、ServerBootstrap
5.反射机制 Class ClassLoader
6.门面模式、java 定时器、包装模式

2018-11-9
1.匿名类、向上转型、抽象类、接口
2.java RMI 、Stub、Callback

2018-11-7
1.IP协议、Socket套接字
2.TCP、UDP的初步了解
3.网络通讯的初步了解
4.了解JAVA的异常机制
5.JAVA 注解，dubbo中的注解
6.构造函数的处理，在继承中处理 super的使用

2018-10-25
1.java与Netty的 channel学习一下，看与dubbo自定义的channel的异同
Channel通道是与硬件设备、文件、网络套接字、以及可以操作I/O操作的程序组件的开发连接。Channel包含两个方法close(),isOpen()。
ByteBuffer是将数据移进移出通道的唯一方式。ByteBuffer用来处理数据，Channel用来处理与其它组件的连接。
SocketChannel中open() 打开套接字通道，read(ByteBuffer dst)从通道中读取内容给ByteBuffer，write(ByteBuffer src)从ByteBuffer读取内容写到Channel

2.网络传输为什么要编解码
3.网络URL学习一下，对比一下与dubbo的自定义的URL的异同
4.为啥用SPI，不可以写个子类继承吗？SPI到底用来做啥？
5.java枚举类的使用
6.Handler设计模式的学习
7.java注解的学习
8.java动态代理
9.java RMI学习
10.Http三次握手、四次挥手原理
11.Http请求头、响应头、参数格式
12.网络传输是以什么为单位的？

13.Dubbo数据传输模型了解一下，（报文格式，数据包）
解：dubbo默认采用netty进行网络传输，ExchangeCodec对字节流处理，对Request、Response编码和解码，
dubbo协议采用固定长度的消息头（16字节）和不定长度的消息体来进行数据传输，消息头定义了netty在IO线程处理时需要的信息


14.java序列化
轻量级持久化、实现Serializable接口,通过ObjectOutputStream、ObjectInputStream读写持久化文件，
通过transient(暂时的，声明后的字段不会序列化)控制序列化权限,Externalizable（可外部化的）读写方法放在一个类

2018/10/26
1.java 进制转换、位预算
2.java Socket InetSocketAddress了解一下
3.telnet 是什么
4.java 构造函数 创建对象时做了什么
5.java 集合类 ArrayList、List、Queue
6.工具类Collections
7.数据结构
8.CharSet字符集的熟悉
9.POJO用途，PojoUtils
10.wireshark的使用

2018/10/27
1.网络7层、曾与层之间的交互了解
2.抓包看dubbo消息头以及消息体内容
3.Dubbo 编解码
解：可以粗略的理解为序列化和反序列化的过程，编码就是把对象转换为byte数据在网络传输，解码就是从网络获取byte数据转换为对象的
过程，Socket的底层已经帮我们处理了IP/TCP的分包，我们不需要解析IP/TCP的包结构，处理包头信息等。但是Dubbo作为一个封装性的协议，
需要自己处理一下包头，包体的内容处理，粘包也需要自行进行处理
4.dubbo涉及的常用编码协议如：hession2？

2018/10/28
1.Invoker与Expoter的转换
2.子类中怎样构造父类，构造函数的调用super()
3.反射机制
4.ConcurrentHashSet（dubbo自定义）

2018/10/30
1.Dubbo负载均衡策略

18/11/5
1.InetAddress的使用以及API

2018/10/29
1.java Pattern、Math以及正则表达式
2.java 反射机制获取方法、变量等 Class类的使用

2018/10/30
1.java AtomicReference、ConcurrentMap
2.java 泛型了解，比如AtomicReference<T>
3.java ScheduledExecutorService 定时器 、ScheduledFuture
4.java ThreadFactory、NamedThreadFactory
5.ReentrantLock、Collections
6.锁的用途
7.java Number使用




